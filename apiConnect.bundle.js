webpackJsonp([16],{504:function(e,n,t){"use strict";function o(e,n){if(!(e instanceof n))throw new TypeError("Cannot call a class as a function")}function r(e,n){if(!e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return!n||"object"!=typeof n&&"function"!=typeof n?e:n}function c(e,n){if("function"!=typeof n&&null!==n)throw new TypeError("Super expression must either be null or a function, not "+typeof n);e.prototype=Object.create(n&&n.prototype,{constructor:{value:e,enumerable:!1,writable:!0,configurable:!0}}),n&&(Object.setPrototypeOf?Object.setPrototypeOf(e,n):e.__proto__=n)}Object.defineProperty(n,"__esModule",{value:!0}),t.d(n,"default",function(){return p});var a=t(10),u=t.n(a),i=t(200),l=function(){function e(e,n){for(var t=0;t<n.length;t++){var o=n[t];o.enumerable=o.enumerable||!1,o.configurable=!0,"value"in o&&(o.writable=!0),Object.defineProperty(e,o.key,o)}}return function(n,t,o){return t&&e(n.prototype,t),o&&e(n,o),n}}(),s={usage:t(636)},p=function(e){function n(){return o(this,n),r(this,(n.__proto__||Object.getPrototypeOf(n)).apply(this,arguments))}return c(n,e),l(n,[{key:"render",value:function(){return u.a.createElement("div",{className:"api-scene"},u.a.createElement("h2",null,u.a.createElement("code",null,"connect(options)")),u.a.createElement("p",null,"Shorthand for ",u.a.createElement("code",null,"kea({ connect: options })")),u.a.createElement("p",null,"It's very handy for connecting actions and values to class components."),u.a.createElement("h3",null,"Usage"),u.a.createElement(i.default,{className:"javascript"},s.usage))}}]),n}(a.Component)},636:function(e,n){e.exports="import React, { Component } from 'react'\nimport { connect } from 'kea'\n\nimport menuLogic from '../menu/logic'\n\n@connect({\n  actions: [\n    menuLogic, [\n      'openMenu',\n      'closeMenu'\n    ]\n  ],\n  values: [\n    menuLogic, [\n      'isOpen as isMenuOpen'\n    ]\n  ]\n})\nexport default class MyComponent extends Component {\n  render () {\n    const { isMenuOpen } = this.props\n    const { openMenu, closeMenu } = this.actions\n\n    return (\n      <div>\n        <button onClick={isMenuOpen ? closeMenu : openMenu}>Toggle menu</button>\n      </div>\n    )\n  }\n}\n"}});