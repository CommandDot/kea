webpackJsonp([19],{558:function(e,t,r){"use strict";function n(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}function o(e,t){if(!e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return!t||"object"!=typeof t&&"function"!=typeof t?e:t}function a(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function, not "+typeof t);e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,enumerable:!1,writable:!0,configurable:!0}}),t&&(Object.setPrototypeOf?Object.setPrototypeOf(e,t):e.__proto__=t)}Object.defineProperty(t,"__esModule",{value:!0}),r.d(t,"default",function(){return d});var s=r(6),l=r.n(s),c=r(217),u=r(132),i=function(){function e(e,t){for(var r=0;r<t.length;r++){var n=t[r];n.enumerable=n.enumerable||!1,n.configurable=!0,"value"in n&&(n.writable=!0),Object.defineProperty(e,n.key,n)}}return function(t,r,n){return r&&e(t.prototype,r),n&&e(t,n),t}}(),p={usage:r(793),sample:r(794),manual:r(795)},d=function(e){function t(){return n(this,t),o(this,(t.__proto__||Object.getPrototypeOf(t)).apply(this,arguments))}return a(t,e),i(t,[{key:"render",value:function(){return l.a.createElement("div",{className:"api-scene"},l.a.createElement("h2",null,l.a.createElement("code",null,"getStore")),l.a.createElement("p",null,"Get a redux store to use in your app, which is already configured to use all kea plugins."),l.a.createElement("p",null,"You are always free to create the redux store yourself (see the ",l.a.createElement("a",{href:"#manual"},"last section"),"), however in that case you must take care to connect all the installed plugins yourself."),l.a.createElement("h3",null,"Usage"),l.a.createElement("p",null,"Shown are the default values:"),l.a.createElement(c.default,{className:"javascript"},p.usage),l.a.createElement("h3",null,"Example with react-router"),l.a.createElement("p",null,"For example, when using react-router (v4) and the Redux Devtools Extension:"),l.a.createElement(c.default,{className:"javascript"},p.sample),l.a.createElement("h3",{id:"manual"},"Manually creating a store"),l.a.createElement("p",null,"Up until Kea v0.24 you had to manually create the store. With ",l.a.createElement("code",null,"getStore")," this is no longer necessary."),l.a.createElement("p",null,"If you still need to, here's how to do it:"),l.a.createElement(c.default,{className:"javascript"},p.manual),l.a.createElement("p",null,"If you then add plugins (e.g. kea-saga or other side effect library), read their documentation to find out how to connect them to the store."),l.a.createElement("p",null,"See the documentation for ",l.a.createElement(u.a,{to:"/api/reducer"},"keaReducer")," to read more about it."))}}]),t}(s.Component)},793:function(e,t){e.exports="// store.js\nimport { getStore } from 'kea'\n\nexport default getStore({\n  // plugins to use globally (for all logic stores)\n  plugins: [],\n\n  // what root paths are available for kea\n  paths: ['kea', 'scenes'],\n\n  // additional reducers that your app uses\n  reducers: {},\n\n  // middleware that gets passed to applyMiddleware(...middleware)\n  middleware: [],\n\n  // the compose function, defaults to the one from redux-devtools-extension or redux's own compose\n  compose: composeWithDevTools || compose,\n\n  // gets passed to compose(middleware, ...enhancers)(createStore)\n  enhancers: []\n})\n\n// index.js\nimport { Provider } from 'react-redux'\nimport store from './store' // this has to come before App\nimport App from './app'\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n)\n"},794:function(e,t){e.exports="// store.js\nimport { getStore } from 'kea'\n\nimport createHistory from 'history/createBrowserHistory'\nimport { routerReducer, routerMiddleware } from 'react-router-redux'\n\nexport const history = createHistory()\n\nexport default getStore({\n  middleware: [\n    routerMiddleware(history)\n  ],\n  reducers: {\n    router: routerReducer\n  }\n})\n\n// index.js\nimport { Provider } from 'react-redux'\nimport store from './store'\nimport App from './app'\n\nReactDOM.render(\n  <Provider store={store}>\n    <ConnectedRouter history={history}>\n      <App />\n    </ConnectedRouter>\n  </Provider>,\n  document.getElementById('root')\n)\n"},795:function(e,t){e.exports="import { createStore, applyMiddleware, combineReducers, compose } from 'redux'\nimport { keaReducer } from 'kea'\n\nconst reducers = combineReducers({\n  kea: keaReducer('kea'),\n  scenes: keaReducer('scenes')\n  // other app reducers here\n})\n\nconst finalCreateStore = compose(\n  // middlewares here\n)(createStore)\n\nconst store = finalCreateStore(reducers)\n"}});