webpackJsonp([8],{499:function(e,n,t){"use strict";function o(e,n){if(!(e instanceof n))throw new TypeError("Cannot call a class as a function")}function a(e,n){if(!e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return!n||"object"!=typeof n&&"function"!=typeof n?e:n}function r(e,n){if("function"!=typeof n&&null!==n)throw new TypeError("Super expression must either be null or a function, not "+typeof n);e.prototype=Object.create(n&&n.prototype,{constructor:{value:e,enumerable:!1,writable:!0,configurable:!0}}),n&&(Object.setPrototypeOf?Object.setPrototypeOf(e,n):e.__proto__=n)}Object.defineProperty(n,"__esModule",{value:!0}),t.d(n,"default",function(){return p});var s=t(10),c=t.n(s),i=t(133),l=t(200),u=function(){function e(e,n){for(var t=0;t<n.length;t++){var o=n[t];o.enumerable=o.enumerable||!1,o.configurable=!0,"value"in o&&(o.writable=!0),Object.defineProperty(e,o.key,o)}}return function(n,t,o){return t&&e(n.prototype,t),o&&e(n,o),n}}(),m={values:t(600),actions:t(601),reducer:t(602),import:t(603)},p=function(e){function n(){return o(this,n),a(this,(n.__proto__||Object.getPrototypeOf(n)).apply(this,arguments))}return r(n,e),u(n,[{key:"render",value:function(){return c.a.createElement("div",{className:"migration-scene"},c.a.createElement("div",{className:"description"},c.a.createElement("h2",null,"Migrating existing Redux applications"),c.a.createElement("p",null,"Since kea is just redux, it is very easy to connect it to an existing redux application."),c.a.createElement("h2",null,"Reading non-Kea state"),c.a.createElement("p",null,"You may pull in data from any part of the Redux tree with the Kea through ",c.a.createElement("code",null,"kea({ connect: { ... } })"),"."),c.a.createElement("p",null,"Instead of passing a logic to fetch from, pass a selector:"),c.a.createElement(l.default,{className:"javascript"},m.values),c.a.createElement("h2",null,"Using non-Kea actions"),c.a.createElement("p",null,"Similarly, use an object of action creators and select the ones you need:"),c.a.createElement(l.default,{className:"javascript"},m.actions),c.a.createElement("p",null,"You may listen to other actions and either have them influence your reducers or run a saga when they happen. Just replace ",c.a.createElement("code",null,"actions.something")," with ",c.a.createElement("code",null,"ACTION_TYPE_CONSTANT"),", like so:"),c.a.createElement(l.default,{className:"javascript"},m.reducer),c.a.createElement("h2",null,"Using Kea actions and selectors elsewhere"),c.a.createElement("p",null,"If the redux-only part of your app needs access to some values or actions from kea logic stores, you can import them like so:"),c.a.createElement(l.default,{className:"javascript"},m.import),c.a.createElement("p",null,"The ",c.a.createElement(i.a,{to:"/api/logic"},"API docs")," describe what is available to import.")))}}]),n}(s.Component)},600:function(e,n){e.exports="import { connect } from 'kea'\n\nimport someLogic from './some-logic'\n\nconst railsContext = (state) => state.rails\n\nconst logic = kea({\n  connect: {\n    values: [\n      someLogic, [ // <----- instead of logic like this\n        'prop1',\n        'prop2'\n      ],\n      state => state.rails, [ // <----- pass a selector\n        'i18nLocale',\n        'currentUserId'\n      ],\n      state => state.form.myForm, [\n        '* as myForm' // get everything as 'myForm'\n      ]\n    ]\n  }\n\n  // ...\n})\n"},601:function(e,n){e.exports="import { connect } from 'kea'\n\nimport someLogic from './some-logic'\n\nconst railsContext = (state) => state.rails\n\nconst actionsCreators = {\n  doSomething: () => ({ type: 'DO_SOMETHING', payload: { } }),\n  otherAction: ({ id }) => ({ type: 'OTHER_ACTION', payload: { id } }),\n}\n\nconst logic = kea({\n  connect: {\n    actions: [\n      someLogic, [ // <--------------- instead of logic like this\n        'action1',\n        'action2'\n      ],\n      actionsCreators, [ // <-- pass an object of action creators\n        'doSomething', // <------------ and select what is needed\n        'otherAction'\n      ]\n    ]\n  }\n\n  // ..\n})\n"},602:function(e,n){e.exports="import { kea } from 'kea'\n\nimport { LOCATION_CHANGE } from 'react-router-redux'\nimport { SOME_ACTION } from './actions'\n\nconst logic = kea({\n  actions: () => ({\n    doit: true\n  }),\n\n  reducers: ({ actions }) => ({\n    myValue: [false, {\n      [SOME_ACTION]: () => false,\n      [actions.doit]: () => true\n    }]\n  }),\n\n  listeners: () => ({\n    [LOCATION_CHANGE]: (payload) => {\n      // ...\n    }\n  })\n})\n"},603:function(e,n){e.exports="const logic = kea({\n  actions: () => ({\n    addOne: true\n  }),\n  reducers: ({ actions }) => ({\n    myNumber: [0, {\n      [actions.addOne]: (state) => state + 1\n    }]\n  }),\n  selectors: ({ selectors }) => ({\n    myNumberDouble: [\n      () => [selectors.myNumber],\n      (myNumber) => myNumber * 2\n    ]\n  })\n})\n\n// The logic must be mounted before you can access its fields\n// This is done automatically when a React component is using it.\n\n// If you're using Kea outside React, call logic.mount() manually to have\n// access to all the fields below.\nlogic.mount()\n\n// Call an action to add something\nlogic.actions.addOne()\n\n// Create an action (returns the object { type: 'add one ...', payload: {} })\nlogic.actionCreators.addOne()\n\n// Reselect selectors for querying redux (state defaults to getState())\nlogic.selectors.myNumber(state)\nlogic.selectors.myNumberDouble(state)\n\n// Shorthand for selectors (implemented as getters)\nlogic.values.myNumber\nlogic.values.myNumberDouble\n"}});