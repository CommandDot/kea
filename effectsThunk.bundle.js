webpackJsonp([13],{634:function(e,t,n){"use strict";function a(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}function r(e,t){if(!e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return!t||"object"!=typeof t&&"function"!=typeof t?e:t}function o(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function, not "+typeof t);e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,enumerable:!1,writable:!0,configurable:!0}}),t&&(Object.setPrototypeOf?Object.setPrototypeOf(e,t):e.__proto__=t)}Object.defineProperty(t,"__esModule",{value:!0}),n.d(t,"default",function(){return k});var l,u,c=n(6),s=n.n(c),i=n(57),m=n(242),p=n(141),d=n(643),h=function(){function e(e,t){for(var n=0;n<t.length;n++){var a=t[n];a.enumerable=a.enumerable||!1,a.configurable=!0,"value"in a&&(a.writable=!0),Object.defineProperty(e,a.key,a)}}return function(t,n,a){return n&&e(t.prototype,n),a&&e(t,a),t}}(),f={install:n(884),import:n(885),store:n(886),usage:n(887)},k=(l=Object(i.a)({actions:[d.a,["toggleFeature"]],props:[d.a,["features"]]}))(u=function(e){function t(){return a(this,t),r(this,(t.__proto__||Object.getPrototypeOf(t)).apply(this,arguments))}return o(t,e),h(t,[{key:"render",value:function(){var e=this.props.features,t=this.actions.toggleFeature;return s.a.createElement("div",null,s.a.createElement("div",{className:"description"},s.a.createElement("h2",null,"Thunks"),s.a.createElement("p",null,"Thunks are the simplest ways to define side effects with Redux.")),s.a.createElement("div",{className:"description"},s.a.createElement("h2",null,"Installation"),s.a.createElement("p",null,"First install the ",s.a.createElement("a",{href:"https://github.com/keajs/kea-thunk"},s.a.createElement("code",null,"kea-thunk"))," and ",s.a.createElement("a",{href:"https://github.com/gaearon/redux-thunk"},s.a.createElement("code",null,"redux-thunk"))," packages:"),s.a.createElement(m.default,{className:"bash"},f.install),s.a.createElement("p",null,"Then you have a few ways to install the plugin:"),s.a.createElement(m.default,{className:"javascript"},f.import),s.a.createElement("p",null,"Use whichever way is most convenient for your setup."),s.a.createElement("p",null,"Note that the ",s.a.createElement("code",null,"kea-thunk")," plugin needs to be installed globally as it needs to add its middleware to the store. You can't use it as a local plugin inside ",s.a.createElement("code",null,"kea({})")," calls."),s.a.createElement("p",null,"If you have configured your store through ",s.a.createElement(p.a,{to:"/api/store"},s.a.createElement("code",null,"getStore()")),", you're all set!"),s.a.createElement("p",null,s.a.createElement("button",{onClick:function(){return t("thunkManualStore")}},"I'm not using ",s.a.createElement("code",null,"getStore"))),e.thunkManualStore?s.a.createElement("div",{className:"extra-help"},s.a.createElement("p",null,"If, you wish to configure your store manually, connect the thunk middleware like so:"),s.a.createElement(m.default,{className:"javascript"},f.store)):null),s.a.createElement("div",{className:"description"},s.a.createElement("h2",null,"Usage"),s.a.createElement("p",null,"You define thunks in a block called ",s.a.createElement("code",null,"thunks"),". Here are some examples:"),s.a.createElement(m.default,{className:"javascript"},f.usage),s.a.createElement("p",null,"As you can see, you have access to the standard Redux ",s.a.createElement("code",null,"dispatch")," and ",s.a.createElement("code",null,"getState")," methods. However you don't need to call ",s.a.createElement("code",null,"dispatch")," before any action in the actions object. They are wrapped automatically.")))}}]),t}(c.Component))||u},643:function(e,t,n){"use strict";function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}var r=n(11),o=n.n(r),l=n(57),u=Object.assign||function(e){for(var t=1;t<arguments.length;t++){var n=arguments[t];for(var a in n)Object.prototype.hasOwnProperty.call(n,a)&&(e[a]=n[a])}return e};t.a=Object(l.e)({actions:function(){return{toggleFeature:function(e){return{feature:e}}}},reducers:function(e){var t=e.actions;return{features:[{},o.a.object,a({},t.toggleFeature,function(e,t){var n=t.feature;return u({},e,a({},n,!e[n]))})]}}})},884:function(e,t){e.exports="yarn add kea-thunk redux-thunk\nnpm install --save kea-thunk redux-thunk\n"},885:function(e,t){e.exports="// the cleanest way\nimport thunkPlugin from 'kea-thunk'\nimport { getStore } from 'kea'\n\nconst store = getStore({\n  plugins: [ thunkPlugin ]\n})\n\n// another way\nimport thunkPlugin from 'kea-thunk'\nimport { activatePlugin } from 'kea'\n\nactivatePlugin(thunkPlugin)\n\n// the shortest way\nimport 'kea-thunk/install'\n"},886:function(e,t){e.exports="import { keaReducer, activatePlugin } from 'kea'\nimport { createStore, combineReducers, applyMiddleware, compose } from 'redux'\n\nimport thunkPlugin from 'kea-thunk'\n\nexport default function getStore () {\n  activatePlugin(thunkPlugin)\n\n  const reducers = combineReducers({\n    kea: keaReducer('kea'),\n    scenes: keaReducer('scenes')\n  })\n\n  const finalCreateStore = compose(\n    applyMiddleware(thunk)\n  )(createStore)\n\n  const store = finalCreateStore(reducers)\n\n  return { store }\n}\n"},887:function(e,t){e.exports="const delay = (ms) => new Promise(resolve => window.setTimeout(resolve, ms))\n\nconst logic = kea({\n  actions: ({ constants }) => ({\n    updateName: name => ({ name })\n  }),\n\n  thunks: ({ actions, get, fetch, dispatch, getState }) => ({\n    updateNameAsync: async name => {\n      await delay(1000)            // standard promise\n      await actions.anotherThunk() // another thunk action\n      actions.updateName(name)     // not a thunk, so no async needed\n      dispatch({ type: 'RANDOM_REDUX_ACTION' }) // random redux action\n\n      get('name') // 'chirpy'\n      fetch('name', 'otherKey') // { name: 'chirpy', otherKey: undefined }\n    },\n    anotherThunk: async () => {\n      // do something\n    }\n  }),\n\n  reducers: ({ actions, constants }) => ({\n    name: ['chirpy', PropTypes.string, {\n      [actions.updateName]: (state, payload) => payload.name\n    }]\n  })\n})\n"}});